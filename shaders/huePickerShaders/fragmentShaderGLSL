precision mediump float;
varying vec2 vertex_position;
uniform float current_hue;

float hue(float x){
return (x+1.0)*3.0/2.0;
}

vec3 getColor(float hue){
float second = fract(hue);
float first = 1.0-fract(hue);

if(floor(hue)==0.0){
return normalize(vec3(first,second,0.0));
}
if(floor(hue)==1.0){
return normalize(vec3(0.0,first,second));
}
if(floor(hue)==2.0){
return normalize(vec3(second,0.0,first));
}
}


void main()
{
vec4 color = vec4(getColor(hue(vertex_position.x)),1.0);
vec4 color2 = vec4(1.0,1.0,1.0,1.0);
if(vertex_position.x>current_hue-0.01&&vertex_position.x<current_hue+0.01){
color = color2;
}
  gl_FragColor = color;
}
